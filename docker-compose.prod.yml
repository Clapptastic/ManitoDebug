version: '3.8'

services:
  manito-prod:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: manito-debug-prod
    ports:
      - "3000-3010:3000-3010"
      - "80:80"
      - "443:443"
    environment:
      - NODE_ENV=production
      - ENABLE_DYNAMIC_PORTS=true
      - PORT_RANGE_START=3000
      - PORT_RANGE_END=3010
      - CLIENT_PORT_RANGE_START=5173
      - CLIENT_PORT_RANGE_END=5180
      - WEBSOCKET_PORT_RANGE_START=3001
      - WEBSOCKET_PORT_RANGE_END=3010
      - POSTGRES_USER=manito_prod
      - POSTGRES_PASSWORD=manito_prod_password
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=manito_prod
      - POSTGRES_PORT=5432
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - manito-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: manito-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - manito-prod
    networks:
      - manito-network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: manito-postgres-prod
    environment:
      - POSTGRES_USER=manito_prod
      - POSTGRES_PASSWORD=manito_prod_password
      - POSTGRES_DB=manito_prod
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - manito-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: manito-redis-prod
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - manito-network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: manito-prometheus-prod
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - manito-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: manito-grafana-prod
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - manito-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  manito-network:
    driver: bridge